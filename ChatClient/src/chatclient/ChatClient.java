/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package chatclient;

import java.awt.Color;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ConcurrentLinkedQueue;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;

/**
 *
 * @author david
 */
public class ChatClient extends javax.swing.JFrame {
    private Socket socket;
    private final ConcurrentLinkedQueue<String> messageQueue;
    
    /**
     * Creates new form ChatClient
     */
    public ChatClient() {
        initComponents();
        this.messageQueue = new ConcurrentLinkedQueue<>();
        
        Thread readThread = new Thread() {
            public void run() {
                DateFormat format = new SimpleDateFormat("HH:mm:ss");
                
                while (true) {
                    if (!messageQueue.isEmpty()) {
                        chatArea.setText(chatArea.getText() + "[" + format.format(new Date()) + "]" + " " + messageQueue.poll() + "\n");
                        JScrollBar vertical = chatScroll.getVerticalScrollBar();
                        vertical.setValue(vertical.getMaximum());
                    }
                }
            }
        };
        
        readThread.start();
    }

    public void showError(String error) {
        JOptionPane.showMessageDialog(null, error, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        hostField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        portField = new javax.swing.JTextField();
        messageField = new javax.swing.JTextField();
        stateLabel = new javax.swing.JLabel();
        sendButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        chatScroll = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 481));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Cliente de Chat");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 20, 190, 20);

        jLabel2.setText("Servidor: (IP o nombre de dominio)");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 70, 200, 16);

        hostField.setText("127.0.0.1");
        jPanel1.add(hostField);
        hostField.setBounds(30, 90, 330, 22);

        jLabel3.setText("Mensaje");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 230, 330, 16);

        portField.setText("3000");
        portField.setToolTipText("");
        jPanel1.add(portField);
        portField.setBounds(30, 150, 330, 22);

        messageField.setText("Hola");
        messageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageFieldActionPerformed(evt);
            }
        });
        jPanel1.add(messageField);
        messageField.setBounds(30, 250, 250, 22);

        stateLabel.setForeground(new java.awt.Color(255, 0, 0));
        stateLabel.setText("No conectado");
        jPanel1.add(stateLabel);
        stateLabel.setBounds(30, 200, 230, 16);

        sendButton.setText("Enviar");
        sendButton.setEnabled(false);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });
        jPanel1.add(sendButton);
        sendButton.setBounds(290, 250, 70, 20);

        jButton2.setText("Conectarse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(270, 200, 90, 22);

        jLabel5.setText("Puerto");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(30, 130, 330, 16);

        chatArea.setEditable(false);
        chatArea.setColumns(20);
        chatArea.setRows(5);
        chatScroll.setViewportView(chatArea);

        jPanel1.add(chatScroll);
        chatScroll.setBounds(30, 280, 330, 170);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageFieldActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        String message = this.messageField.getText();
        DateFormat format = new SimpleDateFormat("HH:mm:ss");
        if (message.equals(""))
        return;

        try {
            DataOutputStream out = new DataOutputStream(this.socket.getOutputStream());
            out.writeUTF(message);
            this.messageQueue.add("(Tu): " + message);
            this.messageField.setText("");
        } catch (IOException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_sendButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (this.hostField.getText().equals("")|| this.portField.getText().equals(""))
        showError("La dirección ip y el puerto son obligatorios");

        try {
            if (this.socket != null) {
                this.socket.close();
                this.socket = null;
            }

            InetAddress ip = InetAddress.getByName(this.hostField.getName());
            this.socket = new Socket(ip, Integer.parseInt(this.portField.getText()));
            ReceiveThread thread = new ReceiveThread(this.socket, this.messageQueue);
            this.chatArea.setText("");
            thread.start();
            this.stateLabel.setText("Conectado");
            this.stateLabel.setForeground(Color.GREEN);
            this.sendButton.setEnabled(true);
        } catch (Exception e) {
            e.printStackTrace();
            this.stateLabel.setText("No conectado");
            this.stateLabel.setForeground(Color.RED);
            showError("No se ha podido establecer la conexión");
            this.sendButton.setEnabled(false);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea chatArea;
    private javax.swing.JScrollPane chatScroll;
    private javax.swing.JTextField hostField;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField messageField;
    private javax.swing.JTextField portField;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel stateLabel;
    // End of variables declaration//GEN-END:variables
}
